@model IEnumerable<GroceryShopSystem.Models.Product>

@{
    ViewData["Title"] = "Index";
}

<h1>Products List</h1>
<div class="d-flex row">
    <form method="get" asp-action="Index" class="row mb-3 g-2 d-flex col-md-9">
        <div class="col-md-3">
            <select name="categoryId" class="form-select form-select-sm" asp-items="ViewBag.Categories">
                <option value="">-- All Categories --</option>
            </select>
        </div>   
        <div class="col-md-2">
            <button type="submit" class="btn btn-sm btn-primary">Apply</button>
        </div>

        
    </form>

    <div class="d-flex align-items-center justify-content-end mb-2 col-md-3">
        <div class="col-md-auto me-2">
            <a asp-action="Index"
               asp-route-categoryId="@ViewBag.CurrentCategory"
               asp-route-sortOrder="@ViewBag.NextSort"
               class="btn btn-sm btn-outline-primary">
                Sort by Price @(ViewBag.CurrentSort == "price_asc" ? "↓" : "↑")
            </a>
        </div>
        <a asp-action="Create" class="btn btn-sm btn-success">Create New</a>
    </div>
</div>
<div class="table-responsive shadow rounded-3">
    <table class="table align-middle table-hover">
        <thead>
            <tr>
                <th>
                    No
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Category)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Price)
                </th>            
                <th>
                    @Html.DisplayNameFor(model => model.Quantity)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @{
                int no = 1; // start counter
            }
            @foreach (var item in Model) {

            <tr>
                <td>@no</td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>            
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>            
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-primary">Edit</a>
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info">Details</a>
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">Delete</a>
            </tr>
                no++;
    }
        </tbody>
    </table>
</div>