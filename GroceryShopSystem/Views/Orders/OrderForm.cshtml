@model GroceryShopSystem.ViewModels.PlaceOrderViewModel
@{
    var order = ViewBag.Order as GroceryShopSystem.Models.Order;
    ViewData["Title"] = "Order Confirmation";
}

<div class="container my-5">
    <h2 class="mb-4 text-center fw-bold">Confirm Your Order</h2>

    <div class="row">
        <!-- Order Items Table -->
        <div class="col-lg-8 mb-4">
            <div class="card shadow-sm rounded-3">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Order Items</h5>
                </div>
                <div class="card-body p-0">
                    <table class="table table-hover align-middle mb-0">
                        <thead class="table-light">
                            <tr>
                                <th>Product</th>
                                <th class="text-center">Quantity</th>
                                <th class="text-end">Price</th>
                                <th class="text-end">Subtotal</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in order.OrderItems)
                            {
                                <tr>
                                    <td>@item.Product.Title</td>
                                    <td class="text-center">@item.Quantity</td>
                                    <td class="text-end">@item.PriceAtPurchase.ToString("C")</td>
                                    <td class="text-end">@((item.PriceAtPurchase * item.Quantity).ToString("C"))</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <div class="d-flex justify-content-end mt-3 px-3">
                        @{
                            var total = order.OrderItems.Sum(i => i.PriceAtPurchase * i.Quantity);
                        }
                        <h5>Total: @total.ToString("C")</h5>
                    </div>
                </div>
            </div>
        </div>

        <!-- Shipping Address Form -->
        <div class="col-lg-4">
            <div class="card shadow-sm rounded-3">
                <div class="card-header bg-success text-white">
                    <h5 class="mb-0">Shipping Address</h5>
                </div>
                <div class="card-body">
                    <form asp-action="ConfirmOrder" method="post">
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(false, "", new { @class = "text-danger" })

                        <input type="hidden" asp-for="TotalPrice" value="@total" />

                        <div class="mb-3">
                            <label class="form-label">Street</label>
                            <input asp-for="Street" class="form-control" placeholder="Enter street" />
                            <span asp-validation-for="Street" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">City</label>
                            <input asp-for="City" class="form-control" placeholder="Enter city" />
                            <span asp-validation-for="City" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">State</label>
                            <input asp-for="State" class="form-control" placeholder="Enter state" />
                            <span asp-validation-for="State" class="text-danger"></span>
                        </div>

                        <button type="submit" class="btn btn-success w-100 mt-3">
                            <i class="bi bi-check-circle"></i> Confirm Order
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
